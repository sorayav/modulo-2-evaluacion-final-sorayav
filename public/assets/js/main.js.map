{"version":3,"sources":["main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["'use strict';\n\nlet inputSearch = document.querySelector('.search__movie');\nconst btnSearch = document.querySelector('.btn__search');\nconst urlBase = 'https://api.tvmaze.com/search/shows?q=';\nlet showList = document.querySelector('.show__shows');\nconst aside = document.querySelector('aside');\nconst showFavList = document.querySelector('.section__fav--movies');\nconst defaultImg = 'https://via.placeholder.com/210x295/cc8383/000';\n// const defaultImg = \"../images/image-not-available.png\";\nconst btnRemoveAll = document.querySelector('.btn__remove--all');\n\nlet shows = null;\nlet favourites = readLocalStorage();\n\n// Conectar con la API \nfunction connectToApi() {\n    showList.innerHTML = '';\n    fetch(urlBase + inputSearch.value)\n      .then (response => response.json())\n      .then (data => {\n        shows = data;\n        paintResults(shows);\n        paintFavourites(favourites);\n      })\n}\n\n// Pintar los resultados de la búsqueda\nfunction paintResults(arr) {\n  for (let item of arr) {\n    let showImage = item.show.image;\n    const searchSection = document.querySelector('.search__shows');\n    const resultsTitle = document.querySelector('h1');\n    resultsTitle.classList.add('hidden');\n    searchSection.classList.remove('full_screen');\n    showList.classList.add('medium_screen');\n    \n    showList.innerHTML += `<li id='${item.show.id}' class='show__list--item'><h3 class='show__title'>${item.show.name}</h3><img src='${showImage === null ? `${defaultImg}` : `${showImage.medium}`}' alt='${item.show.name}'><div class=\"show__item--info overlay\"> <span class=\"overlay__text\">Mas información</span><span>Género: ${item.show.genres}</span><br><span>Idioma: ${item.show.language}</span><br><span>Sinopsis: ${item.show.summary === null ? 'No disponible' : `${item.show.summary}`}</span><br></div></li>`;\n  }\n  addClickListeners();\n}\n\n// Listeners para la lista de resultados\nfunction addClickListeners() {\n  const showItem = document.querySelectorAll('.show__list--item');\n  for (let show of showItem) {\n    show.addEventListener('click', saveFavourites);\n  }\n}\n\n// Relacionar id de favoritos con el array de objetos shows\nfunction getShowObject(id) {\n  return shows.find(show => show.show.id === parseInt(id));\n}\n\n// Guardar como favoritos\nfunction saveFavourites(event) {\n  const selectedShow = event.currentTarget;\n  const id = event.currentTarget.id;\n  const object = getShowObject(id); \n  const findShow = favourites.findIndex(shows => parseInt(shows.id) === parseInt(id)); // Situar el id en el index\n  if (findShow === -1) {\n    favourites.push(object.show); \n    selectedShow.classList.add('fav__show--style');\n    selectedShow.classList.remove('show__list--item');\n    paintFavourites(favourites);\n    setLocalStorage(favourites);\n    } \n    else {\n      favourites.splice(findShow, 1);\n      selectedShow.classList.remove('fav__show--style');\n      selectedShow.classList.add('show__list--item');\n      setLocalStorage(favourites);\n      paintFavourites(favourites);\n    }\n    \n}\n\n// Pintar favoritos\nfunction paintFavourites(favourites) {\n  showFavList.innerHTML = '';\n  const sectionFav = document.querySelector('.section__fav--movies');\n  for (let favourite of favourites) {\n    aside.classList.remove('hidden');\n    sectionFav.innerHTML += `<li id=${favourite.id} class=\"fav__list--item\"><img src=\"${favourite.image === null ? `${defaultImg}` : `${favourite.image.medium}`}\" alt=\"${favourite.name}\"><h4 class=\"fav__item--title\"><a href=\"${favourite.url}\" title=\"Ver ficha.\" aria-label=\"Ver ficha.\" target=\"_blank\">${favourite.name}</a></h4><button class=\"btn__remove--single\" type=\"button\">x</button></li>`;\n    removeSingleFavouriteHandler();\n  } \n}\n\nfunction hidFavSection() {\n  if (favourites === '') {\n    aside.classList.add('hidden');\n  }\n}\n\n// Funciones para eliminar favoritos\nfunction removeAllFavourites() {\n  localStorage.removeItem('favourites');\n  showFavList.innerHTML = '';\n  aside.classList.add('hidden');\n  favourites = [];\n}\nbtnRemoveAll.addEventListener('click', removeAllFavourites);\n\nfunction removeSingleFavouriteHandler() {\n  const btnRemoveSingle = document.querySelectorAll('.btn__remove--single');\n  for (let btn of btnRemoveSingle){\n    btn.addEventListener('click', removeSingleFavourite);\n    hidFavSection();\n  }\n}\n\nfunction removeSingleFavourite(event) {\n  const id = event.currentTarget.parentElement.id;\n  const findShow = favourites.findIndex(shows => parseInt(shows.id) === parseInt(id));\n  favourites.splice(findShow, 1); \n  setLocalStorage(favourites);\n  paintFavourites(favourites);\n}\n\n// Setear localStorage, recibe como parámetro el array de los ids favoritos\nfunction setLocalStorage(favourites) {\n  localStorage.setItem('favourites',JSON.stringify(favourites));\n}\n\n// Leer localStorage\nfunction readLocalStorage() {\n  let localFavourites = JSON.parse(localStorage.getItem('favourites'));\n\n  if (localFavourites !== null) {\n    return localFavourites;\n  } else {\n    return localFavourites = []; // Para evitar que dé error, devolver un array vacío donde poder almacenar los ids\n  }\n}\n\n// Conectar la tecla 'Enter' con el botón de búsqueda \nfunction inputEnter(event) {\n  if(event.keyCode === 13) {\n    btnSearch.click();\n  }\n}\ninputSearch.addEventListener('keyup', inputEnter);\n\nbtnSearch.addEventListener('click', connectToApi);"]}